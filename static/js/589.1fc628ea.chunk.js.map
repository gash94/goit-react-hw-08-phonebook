{"version":3,"file":"static/js/589.1fc628ea.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["export const getContacts = (state) => state.contacts.items;\n\nexport const getIsLoading = (state) => state.contacts.isLoading;\n\nexport const getError = (state) => state.contacts.error;\n\nexport const getStatusFilter = (state) => state.filter.status;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { useDispatch, useSelector } from \"react-redux\";\n\nimport { getContacts } from \"../../redux/contacts/selectors\";\nimport { addContact } from \"../../redux/contacts/operations\";\n\nimport css from \"./ContactForm.module.css\";\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const name = e.target.elements.name.value;\n        const number = e.target.elements.number.value;\n        const normalizedCase = name.toLowerCase();\n        let isAdded = false;\n\n        contacts.forEach((el) => {\n            if (el.name.toLowerCase() === normalizedCase) {\n                alert(`${name} is already in contacts`);\n                isAdded = true;\n            }\n        });\n\n        if (isAdded) {\n            return;\n        }\n        dispatch(addContact({ name, number }));\n        e.target.reset();\n    };\n\n    return (\n        <>\n            <form className={css.form} onSubmit={handleSubmit}>\n                <label className={css.label}>\n                    Name\n                    <input\n                        className={css.input}\n                        autoComplete=\"off\"\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Z–∞-—è–ê-–Ø]+(([' -][a-zA-Z–∞-—è–ê-–Ø ])?[a-zA-Z–∞-—è–ê-–Ø]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        placeholder=\"e.g. John Doe\"\n                        required\n                    />\n                </label>\n                <label className={css.label}>\n                    Number\n                    <input\n                        className={css.input}\n                        autoComplete=\"off\"\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        placeholder=\"e.g. 560-432-234\"\n                        required\n                    />\n                </label>\n                <button className={css.button} type=\"submit\">\n                    Add contact\n                </button>\n            </form>\n        </>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Contact_item__j+P5X\",\"name\":\"Contact_name__xbxVU\",\"number\":\"Contact_number__aT6T9\",\"btn\":\"Contact_btn__JzanX\"};","import { useDispatch } from \"react-redux\";\nimport { MdClose } from \"react-icons/md\";\nimport { deleteContact } from \"../../redux/contacts/operations\";\nimport PropTypes from \"prop-types\";\n\nimport css from \"./Contact.module.css\";\n\nexport const Contact = ({ contact }) => {\n    const dispatch = useDispatch();\n\n    const handleDelete = () => dispatch(deleteContact(contact.id));\n\n    return (\n        <div className={css.item}>\n            <p className={css.name}>{contact.name}:</p>{\" \"}\n            <p className={css.number}>{contact.number}</p>\n            <button className={css.btn} onClick={handleDelete}>\n                <MdClose size={40} />\n            </button>\n        </div>\n    );\n};\nContact.propTypes = {\n    contact: PropTypes.shape({\n        name: PropTypes.string,\n        number: PropTypes.string,\n        id: PropTypes.string,\n    }),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\"};","import { useSelector } from \"react-redux\";\nimport { Contact } from \"../Contact/Contact\";\nimport { getStatusFilter, getContacts } from \"../../redux/contacts/selectors\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport css from \"./ContactList.module.css\";\n\nexport const ContactList = () => {\n    const contacts = useSelector(getContacts);\n    const statusFilter = useSelector(getStatusFilter);\n    const visibileContacts = contacts.filter((contact) => {\n        return contact.name.toLowerCase().includes(statusFilter);\n    });\n    return (\n        <>\n            {contacts.length <= visibileContacts.length ? (\n                <p>Number of contacts: {contacts.length}</p>\n            ) : (\n                <p>Contacts found: {visibileContacts.length}</p>\n            )}\n            {contacts.length === 0 ? (\n                <p>No contacts yet üôÅ</p>\n            ) : contacts !== \"\" && visibileContacts.length === 0 ? (\n                <p>No contacts found üòû </p>\n            ) : (\n                <ul className={css.list}>\n                    <AnimatePresence>\n                        {visibileContacts.reverse().map((contact) => (\n                            <motion.li\n                                className={css.item}\n                                key={contact.id}\n                                initial={{\n                                    y: -50,\n                                    opacity: 0,\n                                }}\n                                animate={{\n                                    y: 0,\n                                    opacity: 1,\n                                    transition: {\n                                        duration: 0.5,\n                                    },\n                                }}\n                                exit={{\n                                    x: 50,\n                                    opacity: 0,\n                                    transition: {\n                                        duration: 0.2,\n                                    },\n                                }}>\n                                {<Contact contact={contact} />}\n                            </motion.li>\n                        ))}\n                    </AnimatePresence>\n                </ul>\n            )}\n        </>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch } from \"react-redux\";\nimport { setStatusFilter } from \"../../redux/filter/slice\";\nimport css from \"./Filter.module.css\";\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n\n    const handleFilterChange = (e) => {\n        dispatch(setStatusFilter(e.target.value));\n    };\n\n    return (\n        <div className={css.filter}>\n            <label className={css.label}>\n                Filter\n                <input\n                    className={css.input}\n                    autoComplete=\"off\"\n                    type=\"search\"\n                    name=\"filter\"\n                    pattern=\"^[a-zA-Z–∞-—è–ê-–Ø]+(([' -][a-zA-Z–∞-—è–ê-–Ø ])?[a-zA-Z–∞-—è–ê-–Ø]*)*$\"\n                    placeholder=\"Enter name\"\n                    onChange={handleFilterChange}\n                />\n            </label>\n        </div>\n    );\n};\n","import { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nimport { ContactForm } from \"../components/ContactForm/ContactForm\";\nimport { ContactList } from \"../components/ContactList/ContactList\";\nimport { Filter } from \"../components/Filter/Filter\";\nimport { fetchContacts } from \"../redux/contacts/operations\";\n\nconst Contacts = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <>\n            <ContactForm />\n            <Filter />\n            <ContactList />\n        </>\n    );\n};\n// const Contacts = () => {\n//     const dispatch = useDispatch();\n//     const isLoading = useSelector(getIsLoading);\n\n//     useEffect(() => {\n//         dispatch(fetchContacts());\n//     }, [dispatch]);\n//     return (\n//         <>\n//             <ContactForm />\n//             <Filter />\n//             <MutatingDots\n//                 height=\"100\"\n//                 width=\"100\"\n//                 color=\"#000\"\n//                 secondaryColor=\"#000\"\n//                 radius=\"15\"\n//                 ariaLabel=\"mutating-dots-loading\"\n//                 wrapperStyle={{}}\n//                 visible={isLoading}\n//             />\n//             <ContactList />\n//         </>\n//     );\n// };\nexport default Contacts;\n"],"names":["getContacts","state","contacts","items","getStatusFilter","filter","status","ContactForm","dispatch","useDispatch","useSelector","className","css","onSubmit","e","preventDefault","name","target","elements","value","number","normalizedCase","toLowerCase","isAdded","forEach","el","alert","addContact","reset","autoComplete","type","pattern","title","placeholder","required","Contact","contact","onClick","deleteContact","id","size","ContactList","statusFilter","visibileContacts","includes","length","AnimatePresence","reverse","map","motion","initial","y","opacity","animate","transition","duration","exit","x","Filter","onChange","setStatusFilter","useEffect","fetchContacts"],"sourceRoot":""}