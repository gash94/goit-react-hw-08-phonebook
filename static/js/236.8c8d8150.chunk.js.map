{"version":3,"file":"static/js/236.8c8d8150.chunk.js","mappings":"mQAIaA,EAAe,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,MAejB,OACI,SAAC,KAAG,CACAC,QAAQ,OACRC,EAAE,OACFC,eAAe,SACfC,WAAW,SAAQ,UACnB,kBAAMC,SAnBO,SAACC,GAClBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfV,GACIW,EAAAA,EAAAA,IAAS,CACLC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGzCL,EAAKQ,OACT,EAQqC,WACzB,UAAC,IAAS,uBAEN,SAAC,EAAAC,EAAK,CACFC,YAAY,2BACZC,KAAK,OACLR,KAAK,aAGb,UAAC,IAAS,oBAEN,SAAC,EAAAM,EAAK,CAACE,KAAK,QAAQR,KAAK,cAE7B,UAAC,IAAS,uBAEN,SAAC,EAAAM,EAAK,CAACE,KAAK,WAAWR,KAAK,iBAEhC,SAAC,IAAM,CAACQ,KAAK,SAAQ,0BAIrC,EC9Ce,SAASC,IACpB,OACI,4BACI,6CACA,SAACtB,EAAY,MAGzB,C,qSCII,GAAoDuB,EAAAA,EAAAA,GAAc,CACpEV,KAAM,2BACNW,aAAc,kHACd,eAHGC,EAAyB,KAAEC,EAAoB,KAIhD,GAA+CH,EAAAA,EAAAA,GAAc,CAC/DI,QAAQ,EACRd,KAAM,uBACN,eAHGe,EAAmB,KAAEC,EAAqB,KAsG/C,IAAIC,GAAcC,EAAAA,EAAAA,IAChB,SAAsBC,EAAOC,GAC3B,IAAMC,GAASC,EAAAA,EAAAA,IAAoB,OAAQH,GAE3C,EAtGJ,SAAgCA,GAC9B,IACMI,EAMFJ,EANFK,GACAC,EAKEN,EALFM,WACAC,EAIEP,EAJFO,UACAC,EAGER,EAHFQ,WACAC,EAEET,EAFFS,WACGC,GAAS,OACVV,EAAK,GACHW,GAAOC,EAAAA,EAAAA,SACPP,EAAKD,GAAU,SAAJ,OAAaO,GACxBE,EAAU,GAAH,OAAMR,EAAE,UACfS,EAAa,GAAH,OAAMT,EAAE,aAClBU,EAAa,GAAH,OAAMV,EAAE,aACxB,GAA8CW,EAAAA,EAAAA,WAAS,GAAM,eAAtDC,EAAe,KAAEC,EAAkB,KAC1C,GAAsCF,EAAAA,EAAAA,WAAS,GAAM,eAA9CG,EAAW,KAAEC,EAAc,KAClC,GAA8BJ,EAAAA,EAAAA,WAAS,GAAM,eAAtCK,EAAS,KAAEC,EAAQ,KACpBC,GAAmBC,EAAAA,EAAAA,cACvB,eAACC,EAAS,UAAH,6CAAG,CAAC,EAAGC,EAAe,UAAH,6CAAG,KAAI,uBAC/BrB,GAAIU,GACDU,GAAM,IACTxB,KAAK0B,EAAAA,EAAAA,IAAUD,GAAc,SAACE,GACvBA,GAELR,GAAe,EACjB,KAAE,GAEJ,CAACL,IAEGc,GAAgBL,EAAAA,EAAAA,cACpB,eAACC,EAAS,UAAH,6CAAG,CAAC,EAAGC,EAAe,UAAH,6CAAG,KAAI,yBAC5BD,GAAM,IACTxB,IAAKyB,EACL,cAAcI,EAAAA,EAAAA,IAAST,GACvB,iBAAiBS,EAAAA,EAAAA,IAAStB,GAC1B,gBAAgBsB,EAAAA,EAAAA,IAASvB,GACzB,iBAAiBuB,EAAAA,EAAAA,IAASrB,GAC1BJ,QAAkB,IAAdoB,EAAOpB,GAAgBoB,EAAOpB,GAAKQ,EACvCkB,aAA4B,IAAnBN,EAAOM,QAAqBN,EAAOM,QAAU1B,GAAE,GAE1D,CAACA,EAAIG,EAAYa,EAAWd,EAAWE,EAAYI,IAE/CmB,GAAuBR,EAAAA,EAAAA,cAC3B,eAACC,EAAS,UAAH,6CAAG,CAAC,EAAGC,EAAe,UAAH,6CAAG,KAAI,uBAC/BrB,GAAIS,GACDW,GAAM,IACTxB,KAAK0B,EAAAA,EAAAA,IAAUD,GAAc,SAACE,GACvBA,GAELV,GAAmB,EACrB,IACA,YAAa,UAAQ,GAEvB,CAACJ,IAEGmB,GAAeT,EAAAA,EAAAA,cACnB,eAACC,EAAS,UAAH,6CAAG,CAAC,EAAGC,EAAe,UAAH,6CAAG,KAAI,iCAC5BD,GACAf,GAAS,IACZT,IAAKyB,EACLQ,KAAM,SAAO,GAEf,CAACxB,IAEGyB,GAA4BX,EAAAA,EAAAA,cAChC,eAACC,EAAS,UAAH,6CAAG,CAAC,EAAGC,EAAe,UAAH,6CAAG,KAAI,yBAC5BD,GAAM,IACTxB,IAAKyB,EACLQ,KAAM,eACN,eAAe,EACfE,SAAUX,EAAOW,UAAY,KAAG,GAElC,IAEF,MAAO,CACL9B,aAAcA,EACdC,YAAaA,EACbE,aAAcA,EACdD,aAAcA,EACda,YAAaA,EACbgB,QAAS,kBAAMf,GAAS,EAAK,EAC7BgB,OAAQ,kBAAMhB,GAAS,EAAM,EAC7BL,gBAAAA,EACAC,mBAAAA,EACAC,YAAAA,EACAC,eAAAA,EACAf,GAAAA,EACAQ,QAAAA,EACAC,WAAAA,EACAC,WAAAA,EACAL,UAAAA,EACAa,iBAAAA,EACAS,qBAAAA,EACAC,aAAAA,EACAJ,cAAAA,EACAM,0BAAAA,EAEJ,CASQI,EALaC,EAAAA,EAAAA,IAAiBxC,IAEhCiC,EAAY,EAAZA,aAEGQ,GADS,EAAZ/B,WACU,aAENgC,GAAYC,EAAAA,EAAAA,IAAG,sBAAuB3C,EAAM0C,WAClD,OAAuBE,EAAAA,EAAAA,KAAIhD,EAAqB,CAAEb,MAAO0D,EAASL,UAA0BQ,EAAAA,EAAAA,KAAInD,EAA2B,CAAEV,MAAOmB,EAAQkC,UAA0BQ,EAAAA,EAAAA,KACpKC,EAAAA,EAAAA,KAAU,kBAELZ,EAAa,CAAC,EAAGhC,IAAI,IACxByC,UAAAA,EACAI,MAAO5C,EAAkB,gBAG/B,IAEFJ,EAAYiD,YAAc,eACLhD,EAAAA,EAAAA,IACnB,SAAyBC,EAAOC,GAC9B,IAAM+C,EAAQnD,IACRK,EAASR,IACTgD,GAAYC,EAAAA,EAAAA,IAAG,2BAA4B3C,EAAM0C,WACvD,OAAuBE,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,KAAU,kBAEI,MAATG,OAAgB,EAASA,EAAMzB,iBAAiBvB,EAAOC,IAAI,IAC9D6C,MAAO5C,EAAO+C,WACdP,UAAAA,IAGN,IAEaK,YAAc,gB,uNC5IzBG,GAAYnD,EAAAA,EAAAA,IAAW,SAAoBoD,EAAalD,GAC1D,IAAImD,EACElD,GAASmD,EAAAA,EAAAA,IAAe,YAAaF,GACrCnD,GAAQwC,EAAAA,EAAAA,IAAiBW,GAG7Bf,GAIEpC,EALF0C,UAKE1C,EAJFoC,UAAQ,EAINpC,EAHFsD,kBAAAA,OAAiB,IAAG,GAAgBV,EAAAA,EAAAA,KAAIW,EAAmB,CAAC,GAAE,IAG5DvD,EAFFwD,kBAAAA,OAAiB,IAAG,OAAI,EACrBC,GAAI,OACLzD,EAAK,GACHgD,GAAQnD,EAAAA,EAAAA,MACR6D,EAA6E,OAAjEN,EAAc,MAATJ,OAAgB,EAASA,EAAMnB,cAAc4B,EAAMxD,IAAgBmD,GAAK,QAAEnD,IAAAA,GAAQwD,GACzG,OAAuBE,EAAAA,EAAAA,MACrBd,EAAAA,EAAAA,OAAY,kBAEPa,GAAQ,IACXhB,WAAWC,EAAAA,EAAAA,IAAG,qBAAsB3C,EAAM0C,WAC1CI,OAAO,QACL3E,QAAS,QACTyF,UAAW,SACR1D,GAELkC,SAAU,CACRA,GACU,MAATY,OAAgB,EAASA,EAAM1C,YAAcgD,EAAoBE,KAI1E,IACAN,EAAUH,YAAc,YACxB,IAAIQ,GAAoBxD,EAAAA,EAAAA,IACtB,SAA4BC,EAAOC,GACjC,IAAM+C,GAAQnD,EAAAA,EAAAA,MACRK,GAASR,EAAAA,EAAAA,KACf,KAAe,MAATsD,OAAgB,EAASA,EAAM1C,YACnC,OAAO,KACT,IAAMoC,GAAYC,EAAAA,EAAAA,IAAG,kCAAmC3C,EAAM0C,WAC9D,OAAuBE,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,MAAW,kBAEG,MAATG,OAAgB,EAASA,EAAMb,0BAA0BnC,EAAOC,IAAI,IACvE6C,MAAO5C,EAAOoD,kBACdZ,UAAAA,IAGN,IAEFa,EAAkBR,YAAc,mB,0QCxDhC,SAASc,EAAe7D,GACtB,MAWF,SAA6BA,GAC3B,IAAIoD,EAAIU,EAAIC,EACNf,GAAQnD,EAAAA,EAAAA,MAEZQ,EAWEL,EAXFK,GACA2D,EAUEhE,EAVFgE,SACAC,EASEjE,EATFiE,SACAC,EAQElE,EARFkE,SACA5D,EAOEN,EAPFM,WACAC,EAMEP,EANFO,UACAE,EAKET,EALFS,WACAD,EAIER,EAJFQ,WACA6B,EAGErC,EAHFqC,QACAC,EAEEtC,EAFFsC,OACGmB,GAAI,OACLzD,EAAK,GACHmE,EAAWnE,EAAM,oBAAsB,CAACA,EAAM,qBAAuB,IAC7D,MAATgD,OAAgB,EAASA,EAAM/B,mBAA8B,MAAT+B,OAAgB,EAASA,EAAMzC,YACtF4D,EAASC,KAAKpB,EAAMlC,aAET,MAATkC,OAAgB,EAASA,EAAM7B,cACjCgD,EAASC,KAAKpB,EAAMjC,YAEtB,OAAO,kBACF0C,GAAI,IACP,mBAAoBU,EAASE,KAAK,WAAQ,EAC1ChE,GAAU,MAANA,EAAaA,EAAc,MAAT2C,OAAgB,EAASA,EAAM3C,GACrDG,WAA+D,OAAlD4C,EAAiB,MAAZY,EAAmBA,EAAWxD,GAAsB4C,EAAc,MAATJ,OAAgB,EAASA,EAAMxC,WAC1GC,WAA+D,OAAlDqD,EAAiB,MAAZG,EAAmBA,EAAWxD,GAAsBqD,EAAc,MAATd,OAAgB,EAASA,EAAMvC,WAC1GH,WAA+D,OAAlDyD,EAAiB,MAAZG,EAAmBA,EAAW5D,GAAsByD,EAAc,MAATf,OAAgB,EAASA,EAAM1C,WAC1GC,UAAwB,MAAbA,EAAoBA,EAAqB,MAATyC,OAAgB,EAASA,EAAMzC,UAC1E8B,SAASiC,EAAAA,EAAAA,IAAyB,MAATtB,OAAgB,EAASA,EAAMX,QAASA,GACjEC,QAAQgC,EAAAA,EAAAA,IAAyB,MAATtB,OAAgB,EAASA,EAAMV,OAAQA,IAEnE,CA7CqEiC,CAAoBvE,GAA/EQ,EAAU,EAAVA,WAAYD,EAAS,EAATA,UAAWE,EAAU,EAAVA,WAAYH,EAAU,EAAVA,WAAemD,GAAI,YAC9D,OAAO,kBACFA,GAAI,IACPO,SAAUxD,EACVyD,SAAUxD,EACVyD,SAAU5D,EACV,gBAAgBkE,EAAAA,EAAAA,IAASjE,GACzB,iBAAiBiE,EAAAA,EAAAA,IAASlE,GAC1B,iBAAiBkE,EAAAA,EAAAA,IAAS/D,IAE9B,C,oECPIgE,GAAQ1E,EAAAA,EAAAA,IAAW,SAAgBC,EAAOC,GAC5C,IAAQyE,EAAsB1E,EAAtB0E,SAAajB,GAAI,OAAKzD,EAAK,GAC7BE,GAASC,EAAAA,EAAAA,IAAoB,QAASsD,GAEtCkB,EAAQd,GADGrB,EAAAA,EAAAA,IAAiBiB,IAE5BmB,GAAajC,EAAAA,EAAAA,IAAG,eAAgB3C,EAAM0C,WAC5C,OAAuBE,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,OAAY,gBAEVgC,KAAMH,GACHC,GAAK,IACR7B,MAAO5C,EAAO8C,MACd/C,IAAAA,EACAyC,UAAWkC,IAGjB,IACAH,EAAM1B,YAAc,QACpB0B,EAAMpE,GAAK,O,mJCtBPyE,GAAMjC,EAAAA,EAAAA,GAAO,OACjBiC,EAAI/B,YAAc,MAClB,IAAIgC,GAAShF,EAAAA,EAAAA,IAAW,SAAiBC,EAAOC,GAC9C,IAAQ4E,EAAwC7E,EAAxC6E,KAAI,EAAoC7E,EAAlCgF,cAAAA,OAAa,IAAG,GAAI,EAAKvB,GAAI,OAAKzD,EAAK,GAC/CE,EAAS8E,EAAgB,CAAE7G,QAAS,OAAQG,WAAY,SAAUD,eAAgB,UAAa,CAAC,EACtG,OAAuBuE,EAAAA,EAAAA,KACrBkC,GAAG,QAED7E,IAAAA,EACAgF,QAASJ,EACT/B,OAAO,kBACF5C,GAAM,IACTgF,WAAY,EACZC,SAAU,KAET1B,GAGT,IACAsB,EAAOhC,YAAc,UACRhD,EAAAA,EAAAA,IAAW,SAAiBC,EAAOC,GAC9C,IAAQ4E,EAAkB7E,EAAlB6E,KAASpB,GAAI,OAAKzD,EAAK,GAC/B,OAAuB4C,EAAAA,EAAAA,KAAImC,GAAQ,QAAEF,KAAAA,EAAM5E,IAAAA,EAAKmF,aAAc,UAAa3B,GAC7E,IACOV,YAAc,Q","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx","../node_modules/@chakra-ui/form-control/dist/chunk-6ZNYZUDD.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-RN6VKE3K.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-IJBC3YLI.mjs","../node_modules/@chakra-ui/input/dist/chunk-GYFRIY2Z.mjs","../node_modules/@chakra-ui/layout/dist/chunk-6CSUKJP7.mjs"],"sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { register } from \"../../redux/auth/operations\";\nimport { Button, FormLabel, Input, Box } from \"@chakra-ui/react\";\n\nexport const RegisterForm = () => {\n    const dispatch = useDispatch();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        dispatch(\n            register({\n                name: form.elements.name.value,\n                email: form.elements.email.value,\n                password: form.elements.password.value,\n            })\n        );\n        form.reset();\n    };\n\n    return (\n        <Box\n            display=\"flex\"\n            h=\"80vh\"\n            justifyContent=\"center\"\n            alignItems=\"center\">\n            <form onSubmit={handleSubmit}>\n                <FormLabel>\n                    Username\n                    <Input\n                        placeholder=\"Enter your nickname here\"\n                        type=\"text\"\n                        name=\"name\"\n                    />\n                </FormLabel>\n                <FormLabel>\n                    Email\n                    <Input type=\"email\" name=\"email\" />\n                </FormLabel>\n                <FormLabel>\n                    Password\n                    <Input type=\"password\" name=\"password\" />\n                </FormLabel>\n                <Button type=\"submit\">Register</Button>\n            </form>\n        </Box>\n    );\n};\n","import { RegisterForm } from \"../components/RegisterForm/RegisterForm\";\nexport default function Register() {\n    return (\n        <div>\n            <title>Registration</title>\n            <RegisterForm />\n        </div>\n    );\n}\n","// src/form-control.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useId, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nvar [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasHelpText(true);\n      })\n    }),\n    [helpTextId]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: props2.id !== void 0 ? props2.id : labelId,\n      htmlFor: props2.htmlFor !== void 0 ? props2.htmlFor : id\n    }),\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    }),\n    [feedbackId]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\"\n    }),\n    [htmlProps]\n  );\n  const getRequiredIndicatorProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    }),\n    []\n  );\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\nvar FormControl = forwardRef(\n  function FormControl2(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps);\n    const className = cx(\"chakra-form-control\", props.className);\n    return /* @__PURE__ */ jsx(FormControlProvider, { value: context, children: /* @__PURE__ */ jsx(FormControlStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      }\n    ) }) });\n  }\n);\nFormControl.displayName = \"FormControl\";\nvar FormHelperText = forwardRef(\n  function FormHelperText2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    const className = cx(\"chakra-form__helper-text\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getHelpTextProps(props, ref),\n        __css: styles.helperText,\n        className\n      }\n    );\n  }\n);\nFormHelperText.displayName = \"FormHelperText\";\n\nexport {\n  useFormControlStyles,\n  useFormControlContext,\n  FormControl,\n  FormHelperText\n};\n","import {\n  useFormControlContext,\n  useFormControlStyles\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/form-label.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar FormLabel = forwardRef(function FormLabel2(passedProps, ref) {\n  var _a;\n  const styles = useStyleConfig(\"FormLabel\", passedProps);\n  const props = omitThemingProps(passedProps);\n  const {\n    className,\n    children,\n    requiredIndicator = /* @__PURE__ */ jsx(RequiredIndicator, {}),\n    optionalIndicator = null,\n    ...rest\n  } = props;\n  const field = useFormControlContext();\n  const ownProps = (_a = field == null ? void 0 : field.getLabelProps(rest, ref)) != null ? _a : { ref, ...rest };\n  return /* @__PURE__ */ jsxs(\n    chakra.label,\n    {\n      ...ownProps,\n      className: cx(\"chakra-form__label\", props.className),\n      __css: {\n        display: \"block\",\n        textAlign: \"start\",\n        ...styles\n      },\n      children: [\n        children,\n        (field == null ? void 0 : field.isRequired) ? requiredIndicator : optionalIndicator\n      ]\n    }\n  );\n});\nFormLabel.displayName = \"FormLabel\";\nvar RequiredIndicator = forwardRef(\n  function RequiredIndicator2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    if (!(field == null ? void 0 : field.isRequired))\n      return null;\n    const className = cx(\"chakra-form__required-indicator\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        ...field == null ? void 0 : field.getRequiredIndicatorProps(props, ref),\n        __css: styles.requiredIndicator,\n        className\n      }\n    );\n  }\n);\nRequiredIndicator.displayName = \"RequiredIndicator\";\n\nexport {\n  FormLabel,\n  RequiredIndicator\n};\n","import {\n  useFormControlContext\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/use-form-control.ts\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nfunction useFormControl(props) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } = useFormControlProps(props);\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  };\n}\nfunction useFormControlProps(props) {\n  var _a, _b, _c;\n  const field = useFormControlContext();\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props;\n  const labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n  if ((field == null ? void 0 : field.hasFeedbackText) && (field == null ? void 0 : field.isInvalid)) {\n    labelIds.push(field.feedbackId);\n  }\n  if (field == null ? void 0 : field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_a = disabled != null ? disabled : isDisabled) != null ? _a : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_b = readOnly != null ? readOnly : isReadOnly) != null ? _b : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_c = required != null ? required : isRequired) != null ? _c : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  };\n}\n\nexport {\n  useFormControl,\n  useFormControlProps\n};\n","// src/input.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Input = forwardRef(function Input2(props, ref) {\n  const { htmlSize, ...rest } = props;\n  const styles = useMultiStyleConfig(\"Input\", rest);\n  const ownProps = omitThemingProps(rest);\n  const input = useFormControl(ownProps);\n  const _className = cx(\"chakra-input\", props.className);\n  return /* @__PURE__ */ jsx(\n    chakra.input,\n    {\n      size: htmlSize,\n      ...input,\n      __css: styles.field,\n      ref,\n      className: _className\n    }\n  );\n});\nInput.displayName = \"Input\";\nInput.id = \"Input\";\n\nexport {\n  Input\n};\n","// src/box.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Box = chakra(\"div\");\nBox.displayName = \"Box\";\nvar Square = forwardRef(function Square2(props, ref) {\n  const { size, centerContent = true, ...rest } = props;\n  const styles = centerContent ? { display: \"flex\", alignItems: \"center\", justifyContent: \"center\" } : {};\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ref,\n      boxSize: size,\n      __css: {\n        ...styles,\n        flexShrink: 0,\n        flexGrow: 0\n      },\n      ...rest\n    }\n  );\n});\nSquare.displayName = \"Square\";\nvar Circle = forwardRef(function Circle2(props, ref) {\n  const { size, ...rest } = props;\n  return /* @__PURE__ */ jsx(Square, { size, ref, borderRadius: \"9999px\", ...rest });\n});\nCircle.displayName = \"Circle\";\n\nexport {\n  Box,\n  Square,\n  Circle\n};\n"],"names":["RegisterForm","dispatch","useDispatch","display","h","justifyContent","alignItems","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","reset","I","placeholder","type","Register","createContext","errorMessage","FormControlStylesProvider","useFormControlStyles","strict","FormControlProvider","useFormControlContext","FormControl","forwardRef","props","ref","styles","useMultiStyleConfig","idProp","id","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","useState","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","isFocused","setFocus","getHelpTextProps","useCallback","props2","forwardedRef","mergeRefs","node","getLabelProps","dataAttr","htmlFor","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","children","onFocus","onBlur","useFormControlProvider","omitThemingProps","context","className","cx","jsx","chakra","__css","displayName","field","helperText","FormLabel","passedProps","_a","useStyleConfig","requiredIndicator","RequiredIndicator","optionalIndicator","rest","ownProps","jsxs","textAlign","useFormControl","_b","_c","disabled","readOnly","required","labelIds","push","join","callAllHandlers","useFormControlProps","ariaAttr","Input","htmlSize","input","_className","size","Box","Square","centerContent","boxSize","flexShrink","flexGrow","borderRadius"],"sourceRoot":""}